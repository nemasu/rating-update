<!DOCTYPE html>
<html class="has-navbar-fixed-top">
<meta charset="UTF-8">

<head>
  {{#if (not player.hidden_status)}}
  <title>{{player.name}} ({{player.data.character_name}}) | RATING UPDATE</title>
    <meta property="og:title" content="{{player.name}} - {{player.data.character_name}} {{player.data.rating_value}} ±{{player.data.rating_deviation}} ({{player.data.game_count}} games)" />
  {{/if}}

  {{#if player.hidden_status}}
  <title>Player has opted out | RATING UPDATE</title>
  {{/if}}

  <meta property="og:type" content="website" />
  <meta property="og:image" content="/android-chrome-192x192.png">
  <meta property="og:description" content="Glicko2 ratings for Guilty Gear Strive" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="theme-color" content="#ffffff">
  <link href="/styles.css" rel="stylesheet" type="text/css">
  <script src="https://kit.fontawesome.com/ec45b90910.js" crossorigin="anonymous"></script>
  <script src="/scripts.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1">

</head>


<body onload="
      char_id = '{{char_id}}';
        load_history();
    ">
  {{> navbar}}
  {{#if (not player.hidden_status)}}
  <section class="hero is-primary">
    <div class="hero-body has-text-centered">
      <p class="title">
        {{#if player.vip_status}}
        <span class="tag is-warning is-medium">VIP</span>
        {{/if}}
        {{player.name}}
        <span class="tag is-medium">{{player.platform}}</span>
      </p>
      {{#if player.cheater_status}}
          <strong class="subtitle">This user has been flagged for cheating by community reports. ({{player.cheater_status}})</strong>
      {{/if}}
      {{#if player.other_names}}
      <div class="tags is-justify-content-center">
        <span class="tag is-medium">AKA:</span>
        {{#each player.other_names}}
        <span class="tag is-danger is-medium">{{this}}</span>
        {{/each}}
      </div>
      {{/if}}
    </div>
  </section>
  <section class="section">
    <div class="container">
      <div class="columns is-flex-wrap-wrap-reverse">
        <div class="column is-three-quarters-fullhd">
          <div class="content">

            <div id="modal" class="modal">

              <!-- Modal content -->
              <div class="modal-content">
                <div class="modal-header">
                  <span class="close">&times;</span>
                  <h2>Opt out from rating update</h2>
                </div>
                <div class="modal-body">
                    To opt out put the following code in your R-Code comment section: <span id="code" class="bold"></span> <span id="loader" class="loader"/></span></hr>
                    <img src="/example.jpg"/>
                </div>

              </div>

            </div>

            <h2>
              {{player.data.character_name}} Rating:
              {{#if player.cheater_status}}
              ({{player.data.game_count}} games)
              {{else}}
              {{player.data.rating_value}} ±{{player.data.rating_deviation}} ({{player.data.game_count}} games)
              {{/if}}
              {{#if player.data.character_rank}}
                  <span class="tag is-danger is-medium">#{{player.data.character_rank}} {{player.data.character_name}}</span>
              {{/if}}
              {{#if player.data.global_rank}}
              <span class="tag is-warning is-medium">#{{player.data.global_rank}} Overall</span>
              {{/if}}
            </h2>
            {{#if player.data.top_rating_value}}
            <h4>Top rating:
                      {{player.data.top_rating_value}}±{{player.data.top_rating_deviation}} ({{player.data.top_rating_timestamp}})
            </h4>
            {{/if}}
            {{#if player.data.top_defeated_id}}
            <h4>Top defeated:
              <a href="/player/{{player.data.top_defeated_id}}/{{player.data.top_defeated_char_id}}">
                <span class="maybe_long_name" title="{{name}}">{{player.data.top_defeated_name}}</span>
                <span>({{player.data.top_defeated_char_id}})</span>
              </a>
                      {{player.data.top_defeated_value}}±{{player.data.top_defeated_deviation}} ({{player.data.top_defeated_timestamp}})
            </h4>
            {{/if}}

            <div id="history_wrapper">
              <h2>Match History</h2>
              <button id="decrement_button" onclick="decrement_page()">←</button>
              <span id="current_page" style="min-width: 7em; display: inline-block;">Loading...</span>
              <button onclick="increment_page()">→</button>
              <div id="history">
                <p>Loading match history..<p>
            </div>
          </div>

          <div id="chart_wrapper">
            <br />
            <div>
            <span><button class="tag is-light" onclick="LoadChart(100);">Last 100</button></span>
            <span><button class="tag is-light" onclick="LoadChart(200);">Last 200</button></span>
            <span><button class="tag is-light" onclick="LoadChart(300);">Last 300</button></span>
            <span><button class="tag is-light" onclick="LoadChart(400);">Last 400</button></span>
            <span><button class="tag is-light" onclick="LoadChart(500);">Last 500</button></span>
            </div>
            <div id="chart" style="overflow:auto;"><canvas id="ratings" style="min-width:1000px;min-height:400px;"></canvas></div>
          </div>

          {{#if player.data.matchups}}
          <h2>Matchups</h2>
          <div class="table-container">
            <table>
              <tr>
                <th>Matchup</th>
                <th>Games</th>
                <th>Win rate</th>
                <th>Rating offset</th>
              </tr>
              {{#each player.data.matchups}}
              <tr>
                <td>{{this.character}}</td>
                <td class="centered">{{this.game_count}}</td>
                <td class="centered">{{this.win_rate}}%</td>
                  <td title="{{this.rating}} ±{{this.rating_deviation}}" class="{{this.rating_change_class}} centered">{{this.rating_offset}}</td>
              </tr>
              {{/each}}
              <tr>
                <td><b>Overall</b></td>
                <td class="centered"><b>{{player.data.game_count}}</b></td>
                <td class="centered"><b>{{player.data.win_rate}}%</b></td>
                <td></td>
              </tr>
            </table>
          </div>
          {{/if}}
          <div>
            <button class="tag is-danger is-medium" onclick="toggle_profile('{{player.id}}');">Hide my profile</button>
          </div>
        </div>
      </div>
      <div class="column is-one-quarter-fullhd">
        <div>
          <label class="checkbox">
            <input id="id_toggleRefresh" onclick="toggleRefresh();" type="checkbox"> Check this box to refresh automatically.
          </label>
        </div>
        <div>
          <label class="checkbox">
            <input id="id_toggleLocalDate" onclick="toggleLocalDate();" type="checkbox"> Check this box to use local time.
          </label>
        </div>
        <hr>
        <aside class="menu">
          <p class="menu-label">
            Characters:
          </p>
          <ul class="menu-list">
            {{#each player.other_characters}}
            <li class="charTab">
              <a href="/player/{{../player.id}}/{{this.character_shortname}}">
                {{#if ../player.cheater_status}}
                {{this.character_name}} ({{this.game_count}} games)
                {{else}}
                {{this.character_name}} {{this.rating_value}} ±{{this.rating_deviation}} ({{this.game_count}} games)
                {{/if}}
              </a>
            </li>
            {{/each}}
          </ul>
        </aside>
        <hr>
      </div>
    </div>
  </section>
  {{else}}
  <section class="hero is-primary">
    <div class="hero-body has-text-centered">
      <div id="modal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
          <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Opt out from rating update</h2>
          </div>
          <div class="modal-body">
            To confirm that this is your profile, put the following code in your R-Code comment section: <span id="code" class="bold"></span> <span id="loader" class="loader"/></span>, close it, and wait for this page to refresh. After the profile has been confirmed you can change your R-code comment back to whatever you want.</hr>
            <img src="/example.jpg"/>
          </div>
        </div>
      </div>
      <p class="title bold">Player has chosen to opt out of rating update.</p>
        <div><button class="tag is-danger is-medium" onclick="toggle_profile('{{player.id}}');">Enable my profile</button></div>
    </div>
  </section>
  {{/if}}

</body>

<script type="text/javascript">

  var chart;
  var timeout;

  document.addEventListener("DOMContentLoaded", function (event) {
    LoadChart(100);

    const autoRefresh = localStorage.getItem("autoRefresh") || false;
    if( autoRefresh ) {
      document.getElementById("id_toggleRefresh").checked = true;
      timeout = setTimeout(function() {
        location.reload();
      }, 70000);
    }

    const localDate = localStorage.getItem("localDate") || false;
    if( localDate ) {
      document.getElementById("id_toggleLocalDate").checked = true;
    }
  });

  function toggleRefresh() {
    const autoRefresh = localStorage.getItem("autoRefresh") || false;
    if(!autoRefresh) {
      localStorage.setItem("autoRefresh", true);
      timeout = setTimeout(function() {
        location.reload();
      }, 70000);

    } else {
      localStorage.removeItem("autoRefresh");
      clearTimeout(timeout);
    }
  }

  function toggleLocalDate() {
    const localDate = localStorage.getItem("localDate") || false;
    if(!localDate) {
      localStorage.setItem("localDate", true);
    } else {
      localStorage.removeItem("localDate");
    }
    load_history()
    updateNavbarDateTime()
  }

  function LoadChart(game_count) {
    fetch("/api/rating_history/{{player_id}}/{{char_id}}?game_count="+game_count).then(function(response) {
      return response.json();
    }).then(function(data) {
      data.reverse();
      data.push({{ player.data.rating_value }});
      
      const ctx = document.getElementById('ratings');

      var labels = [];
      for (var i = 0; i < data.length; i++) {
        labels.push("");
      }

      if( chart ) {
        chart.data.labels=labels;
        chart.data.datasets[0].label='Last ' + game_count + ' games';
        chart.data.datasets[0].data=data;
        chart.update();
      } else {
        chart = new Chart(ctx, {
          type: 'line',
          options: {
            events: ['mousemove', 'mouseout', 'touchstart', 'touchmove'],
            responsive: false,
          },
          data: {
            labels: labels,
            datasets: [
              {
                label: 'Last 100 games',
                borderColor: 'whitesmoke',
                data: data
              }
            ]
          }
        });
      }
    });
  }

  var span = document.getElementsByClassName("close")[0];
  let timer = null;

  span.onclick = function() {
    var modal = document.getElementById("modal");
    modal.style.display = "none";
  }

  window.onclick = function(event) {
    var modal = document.getElementById("modal");
    if (event.target == modal) {
      modal.style.display = "none";

      if (timer != null) {
        clearInterval(timer);
      }
    }
  }


  function toggle_profile(player_id) {
    var modal = document.getElementById("modal");
    modal.style.display = "block";

    const req = new XMLHttpRequest();
    req.open("GET", `/api/hide/${player_id}`);
    req.send();

    req.onreadystatechange = (e) => {
      document.getElementById("code").textContent = req.responseText.replaceAll('"', '');
    }

    timer = setInterval(() => {
      poll_player(player_id);
    }, 2000);
  }

  let counter = 0;
  function poll_player(player_id) {
    // 	✅

    if (counter >= 40) {
      clearInterval(timer);

      var modal = document.getElementById("modal");
      modal.style.display = "none";

      alert("You have idled for too long. Please retry the hide feature");
    }
    const req = new XMLHttpRequest();
    req.open("GET", `/api/hide/poll/${player_id}`);
    req.send();

    req.onreadystatechange = (e) => {
      if (req.readyState == 4 && req.status == 200 && req.response != 'false') {
        clearInterval(timer);
        let loader = document.getElementById("loader");
        loader.className = "";
        loader.textContent = "✅";  
        setTimeout(() => {
          location.reload();
        }, 5000);

      }
    }

    counter++;
  }
</script>
{{> footer }}

</html>
